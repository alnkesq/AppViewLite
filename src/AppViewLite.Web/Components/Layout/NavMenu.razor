@inject AppViewLiteSession Session
@inject NavigationManager Navigation
@inject BlueskyEnrichedApis Apis
@inject RequestContext RequestContext
@inject IHttpContextAccessor HttpContextAccessor

@code{
    private long NotificationCount;
    string? Announcement;
    private BlueskyProfile[] LoggedInAccounts = [];
    [Parameter] public bool NeedsNotificationCount { get; set; }
    protected override void OnParametersSet()
    {
        NotificationCount = NeedsNotificationCount ? Apis.GetNotificationCount(Session, RequestContext, dark: false) : -1;
        var staleness = Apis.PlcDirectoryStaleness;

        var availableDiskSpace = Apis.primarySecondaryPair.relationshipsUnlocked.AvailableDiskSpace;

        if (availableDiskSpace < BlueskyRelationships.WarnOnLowDiskSpace)
        {

            Announcement = $"This instance is running low on disk space ({StringUtils.ToHumanBytes(availableDiskSpace)}).";    
        }
        else if (staleness.TotalDays >= 7) 
        {
            Announcement = $"The PLC directory is still syncing ({staleness.TotalDays:0.0} days out of date). User search might be incomplete";
        }

        if (Session.IsLoggedIn)
        {
            var cookie = ParsedMultisessionCookie.Parse(HttpContextAccessor.HttpContext!.Request.Cookies[ParsedMultisessionCookie.CookieName]);
            if (cookie.Sessions.Length == 1)
            {
                LoggedInAccounts = [RequestContext.UserContext.Profile!];
            }
            else
            {
                LoggedInAccounts = Apis.WithRelationshipsLock(rels => cookie.Sessions.Select(x => rels.GetProfile(rels.SerializeDid(x.UnverifiedDid, RequestContext))).ToArray(), RequestContext);

            }

        }

    }
    private const string DiscoverUrl = "@bsky.app/feed/whats-hot";
}

<nav>
    @if (Announcement != null)
    {
        <div class="sidebar-announcement">@Announcement</div>
    }
    @if (Session.IsLoggedIn)
    {
        <a href="@Session.Profile!.HomeUrl">
            <img src="@Session.Profile!.AvatarUrl" class="post-author-image">
        </a>

        <div>
            <NavLink href="/following">
                Following
            </NavLink>
        </div>
    }


    <div>
        <NavLink href="/search" data-alwaysfocuspage="1">
            Search
        </NavLink>
    </div>

    @if (Session.IsLoggedIn)
    {
        <div>
            <NavLink href="/notifications" data-alwaysfocuspage="1">
                Notifications
                <span class="notification-badge @(NotificationCount == 0 ? "display-none" : null)">@NotificationCount</span>
            </NavLink>
        </div>
    }

    <div>
        <NavLink href="/search?kind=feeds">
            Feeds
        </NavLink>
    </div>
    <div>
        <NavLink href="@DiscoverUrl">
            Discover
        </NavLink>
    </div>

    @if (Session.IsLoggedIn)
    {
        <div>
            <NavLink href="@Session.Profile!.HomeUrl">
                Profile
            </NavLink>
        </div>
        <div>
            <NavLink href="/settings">
                Settings
            </NavLink>
        </div>
        <div class="sidebar-item-post">
            <NavLink href="/compose">
                New Post
            </NavLink>
        </div>
        <div class="sidebar-item-small">
            <NavLink href="/history">
                History
            </NavLink>
        </div>
    }
    else
    {
        <div>
            @{
                var url = Navigation.ToAbsoluteUri(Navigation.Uri);
                var loginUrl = url.AbsolutePath == "/login" || url.AbsolutePath == "/@bsky.app/feed/whats-hot" ? "/login" : "/login?return=" + Uri.EscapeDataString(url.PathAndQuery);
            }
            <NavLink href="@loginUrl" id="login-link">
                Login
            </NavLink>
        </div>
    }
    
    <div class="sidebar-item-small">
        <NavLink href="/debug">
            Debug
        </NavLink>
    </div>

    <div class="sidebar-item-small">
        <NavLink href="https://github.com/alnkesq/AppViewLite" target="_blank">
            Fork on GitHub
        </NavLink>
    </div>

    @if (RequestContext.IsLoggedIn)
    {
        @if (LoggedInAccounts.Length == 1)
        {
            <div class="sidebar-item-small">
                <NavLink href="/login" data-enhance-nav="false">
                    Log in to other account
                </NavLink>
            </div>


            <div class="sidebar-item-small">
                <NavLink href="/logout" data-enhance-nav="false">
                    Log out
                </NavLink>
            </div>
        }
        else
        {
            @foreach (var session in LoggedInAccounts)
            {
                if (session.Did == RequestContext.UserContext.Did)
                {
                    
                    <div class="sidebar-item-small">
                        <b>@session.DisplayNameOrFallback</b>
                    </div>
                    <div class="sidebar-item-small">
                        <NavLink href="/logout" data-enhance-nav="false">
                            &nbsp;&nbsp;&nbsp;&nbsp;Log out
                        </NavLink>
                    </div>
                }
                else
                {
                    <div class="sidebar-item-small">
                        <NavLink href="@("/set-active-profile?did=" + Uri.EscapeDataString(session.Did))" data-enhance-nav="false">
                            @session.DisplayNameOrFallback
                        </NavLink>
                    </div>
                }
            }
            <div class="sidebar-item-small">
                <NavLink href="/login" data-enhance-nav="false">
                    Log in to other account
                </NavLink>
            </div>


        }
    }
</nav>

