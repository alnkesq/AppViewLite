@page "/logout"
@using System.Collections.Immutable
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject BlueskyEnrichedApis Apis
@inject RequestContext RequestContext

<form method="post" @onsubmit="Submit" @formname="logoutForm" id="logoutForm">
    <AntiforgeryToken />
    <br><br>
    Logging out...
</form>
<script>
    document.getElementById('logoutForm').submit();
</script>

@code {
    [SupplyParameterFromForm]
    private LoginData? Model { get; set; }

    protected override void OnInitialized()
    {
        if (!RequestContext.IsLoggedIn) Navigation.NavigateTo("/", true);
        Model ??= new();
    }

    private void Submit()
    {

        var allSessions = ParsedMultisessionCookie.Parse(HttpContextAccessor.HttpContext!.Request.Cookies[ParsedMultisessionCookie.CookieName]);
        if (allSessions.ActiveDid != null)
        {
            Apis.LogOut(allSessions.Sessions.First(x => x.UnverifiedDid == allSessions.ActiveDid), RequestContext);
            var remainingSessions = allSessions.Sessions.Where(x => x.UnverifiedDid != allSessions.ActiveDid).ToImmutableArray();

            allSessions = new ParsedMultisessionCookie(remainingSessions.FirstOrDefault().UnverifiedDid, remainingSessions);
            HttpContextAccessor.HttpContext!.Response.AppendEssentialCookie(ParsedMultisessionCookie.CookieName, allSessions.ToString() ?? string.Empty);
        }
        Navigation.NavigateTo("/", true);
        
    }

    public class LoginData
    {
    }
}


